{"version":3,"file":"01-timer.js","sources":["../src/js/01-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst calendar = document.getElementById('datetime-picker');\nconst startBtn = document.querySelector('button[data-start]');\nstartBtn.disabled = true;\nconst secondsSpan = document.querySelector('span[data-seconds]');\nconst minutesSpan = document.querySelector('span[data-minutes]');\nconst hoursSpan = document.querySelector('span[data-hours]');\nconst daysSpan = document.querySelector('span[data-days]');\n\nlet userSelectedDate = null;\nlet timerInterval = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDate) {\n    const currentDate = new Date();\n    userSelectedDate = selectedDate[0];\n\n    if (userSelectedDate <= currentDate) {\n      iziToast.error({message: 'Please choose a date in the future'});\n      startBtn.disabled = true;\n    } else {\n        startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(calendar, options);\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = 60 * second;\n    const hour = 60 * minute;\n    const day = 24 * hour;\n  \n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n    return value.toString().padStart(2, '0');\n}\n\nfunction countDown() {\n  startBtn.disabled = true;\n\n  const refreshTimer = () => {\n    const currentTime = new Date();\n    const timeDiff = userSelectedDate - currentTime;\n\n    if (timeDiff <= 0) {\n      clearInterval(timerInterval);\n      return;\n    };\n\n    const timeLeft = convertMs(timeDiff);\n    daysSpan.textContent = addLeadingZero(timeLeft.days);\n    hoursSpan.textContent = addLeadingZero(timeLeft.hours);\n    minutesSpan.textContent = addLeadingZero(timeLeft.minutes);\n    secondsSpan.textContent = addLeadingZero(timeLeft.seconds);\n  };\n\n  refreshTimer();\n  timerInterval = setInterval(refreshTimer, 1000);\n}\n\nstartBtn.addEventListener('click', countDown);"],"names":["calendar","startBtn","secondsSpan","minutesSpan","hoursSpan","daysSpan","userSelectedDate","timerInterval","options","selectedDate","currentDate","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","countDown","refreshTimer","timeDiff","timeLeft"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,eAAe,iBAAiB,EACpDC,EAAW,SAAS,cAAc,oBAAoB,EAC5DA,EAAS,SAAW,GACpB,MAAMC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAW,SAAS,cAAc,iBAAiB,EAEzD,IAAIC,EAAmB,KACnBC,EAAgB,KAEpB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAc,CACpB,MAAMC,EAAc,IAAI,KACxBJ,EAAmBG,EAAa,CAAC,EAE7BH,GAAoBI,GACtBC,EAAS,MAAM,CAAC,QAAS,oCAAoC,CAAC,EAC9DV,EAAS,SAAW,IAElBA,EAAS,SAAW,EAEzB,CACH,EAEAW,EAAUZ,EAAUQ,CAAO,EAE3B,SAASK,EAAUC,EAAI,CAMnB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASC,EAAeC,EAAO,CAC3B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CAC3C,CAEA,SAASC,GAAY,CACnBpB,EAAS,SAAW,GAEpB,MAAMqB,EAAe,IAAM,CAEzB,MAAMC,EAAWjB,EADG,IAAI,KAGxB,GAAIiB,GAAY,EAAG,CACjB,cAAchB,CAAa,EAC3B,MAEN,CACI,MAAMiB,EAAWX,EAAUU,CAAQ,EACnClB,EAAS,YAAcc,EAAeK,EAAS,IAAI,EACnDpB,EAAU,YAAce,EAAeK,EAAS,KAAK,EACrDrB,EAAY,YAAcgB,EAAeK,EAAS,OAAO,EACzDtB,EAAY,YAAciB,EAAeK,EAAS,OAAO,CAC7D,EAEEF,IACAf,EAAgB,YAAYe,EAAc,GAAI,CAChD,CAEArB,EAAS,iBAAiB,QAASoB,CAAS"}